{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,4BAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAwBA,OACI,mCACI,sBAAMC,SAhBO,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAUd,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SA1BU,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,e,+BCPhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEhBC,EAFgB,iDAEgCC,UAAWH,GAF3C,+DAGHI,MAAOF,GAHJ,cAGhBG,EAHgB,gBAICA,EAAKC,OAJN,uBAIdC,EAJc,EAIdA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXpB,kBAefM,GAfe,4CAAH,sDCDVO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,SCFLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA4BA,OAvBAC,qBAAW,WAGPxB,EAASC,GACRwB,MAAM,SAAAC,GAEHC,YAAY,WAERJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAId,UAKJ,CAAEpB,IAIFqB,ED1B0BM,CAAc3B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCAEI,oBAAIJ,UAAU,2CAAd,SAA2DhB,IAEtDoB,GAAW,mBAAGJ,UAAU,uCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAM,SAAAC,GAAG,OACZ,cAAC,EAAD,eAESA,GADCA,EAAIC,aEhB7BiB,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,WAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAIA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGI4C,EAAWpB,KAAK,SAAAT,GAAQ,OAEpB,aADJ,CACK,EAAD,CAEIA,SAAYA,GADLA,U,MCZ/B8B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0f77f7e9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('Escriba una categorÃ­a')\r\n    \r\n\r\n    // Para cambiar el valor dentro del input\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue (e.target.value);\r\n    }\r\n\r\n    // Para trabajar el enter\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue, ...cats ]);\r\n            setInputValue(''); \r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange= { handleInputChange }\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}"," \r\n \r\n \r\n export   const getGifs = async( category ) => {\r\n\r\n    const url= `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category) }&limit=10&api_key=49g4JO6y9pdW7fO9tRORiFpbJ13x0ta3`;\r\n    const resp = await fetch (url);\r\n    const { data } = await resp.json();\r\n\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomInLeft\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            \r\n            <h3 className=\"animate__animated animate__bounceInRight\">{ category }</h3>\r\n\r\n                {loading && <p className=\"animate__animated animate__heartBeat\" >Loading</p>}\r\n\r\n                <div className=\"card-grid\">\r\n                    {\r\n                        images.map ( img => (\r\n                            <GifGridItem\r\n                                key={ img.id } \r\n                                { ...img } \r\n                            />\r\n                        ))\r\n                    }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n// Ejemplo de contador\r\n/* <h3> { count } </h3>\r\n<button onClick={ ()=> setCount (count +1) }></button> */","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n\r\n        getGifs( category )\r\n        .then( imgs => {\r\n\r\n            setTimeout( () => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n\r\n\r\n            }, 3000);\r\n\r\n\r\n        });\r\n\r\n        }, [ category ])\r\n\r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            {\r\n                categories.map( category =>( \r\n                //{    return <li key={ category }>{ category } </li> }\r\n                    <GifGrid \r\n                        key= { category } \r\n                        category= { category }\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}